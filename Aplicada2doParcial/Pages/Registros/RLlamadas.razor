@page "/RLlamadas"
@page "/RLlamadas/{LLamadaId:int}"


<div class="container">
    <h1 class="display-3 text-center">Registro de Llamadas</h1>

    <div>
        <EditForm Model="Llamada" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label>Id</label>
                <div class="input-group">
                    <InputNumber @bind-Value="Llamada.LlamadaId" class="form-control" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
                    </div>
                </div>

            </div>

            <div class="form-group">
                <label>Descripcion</label>
                <InputText @bind-Value="Llamada.Descripcion" class="form-control" />
            </div>

            <div class="form-row">
                <div class="col">
                    <label>Problema</label>
                    <InputText @bind-Value="Caso.Problema" class="form-control" />
                </div>

                <div class="col">
                    <label>Solucion</label>
                    <div class="input-group">
                        <InputText @bind-Value="Caso.Solucion" class="form-control" />
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary" @onclick="AgregarCaso">Agregar</button>
                        </div>
                    </div>
                    <small class="text-muted">@MensajeDetalle</small>
                </div>
            </div>

            <div class="mt-3">

                <table class="table">
                    <thead class="thead-dark">

                        <tr>
                            <th scope="col">Problema</th>
                            <th scope="col">Solucion</th>
                            <th></th>
                        </tr>

                    </thead>
                    <tbody>
                        @foreach (var caso in Llamada.Casos)
                        {
                            <tr>
                                <td scope="row">@caso.Problema</td>
                                <td>@caso.Solucion</td>
                                <td><button type="button" class="btn btn-outline-danger" @onclick="(()=> Llamada.Casos.Remove(caso))">Eliminar</button></td>
                            </tr>
                        }

                    </tbody>

                </table>

            </div>

            <ValidationSummary />
            <small class="text-muted">@Mensaje</small>

            <button type="button" class="btn btn-primary" @onclick="Limpiar">Limpiar</button>
            <button type="submit" class="btn btn-success">Guardar</button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>


        </EditForm>
    </div>

</div>




@code {

    public Llamadas Llamada { get; set; }
    public Casos Caso { get; set; }
    public string Mensaje { get; set; }
    public string MensajeDetalle { get; set; }

    [Parameter]
    public int LlamadaId { get; set; }

    protected override void OnInitialized()
    {
        Llamada = new Llamadas();
        Caso = new Casos();

    }

    protected override void OnParametersSet()
    {
        Llamada.LlamadaId = LlamadaId;
        Buscar();
    }




    private void AgregarCaso()
    {
        if (string.IsNullOrWhiteSpace(Caso.Problema))
        {
            MensajeDetalle = "Debe agregar un problema";
            return;
        }

        if (string.IsNullOrWhiteSpace(Caso.Solucion))
        {
            MensajeDetalle = "Debe agregar una Solucion";
            return;
        }

        Llamada.Casos.Add(new Casos() { Problema = Caso.Problema, Solucion = Caso.Solucion });
        Caso = new Casos();
    }

    private void Limpiar()
    {
        Llamada = new Llamadas();
        Mensaje = string.Empty;
        MensajeDetalle = string.Empty;
    }

    private void Guardar()
    {
        try
        {
            if (Llamada.Casos.Count() <= 0)
            {
                Mensaje = "Debe de agregar una problema y una solucion";
                return;
            }

            if (LlamadasController.Guardar(Llamada))
            {
                Llamada = new Llamadas();
                Mensaje = "Guardado correctamente";
            }
            else
            {
                Mensaje = "No se pudo guardar";
            }
        }
        catch (Exception)
        {

            throw;
        }
    }


    private void Buscar()
    {
        try
        {
            Llamadas llamada = LlamadasController.Buscar(Llamada.LlamadaId);

            if (llamada != null)
            {
                Llamada = llamada;

            }
            else
            {
                Mensaje = "No se pudo encontrar, no existe";
            }
        }
        catch (Exception)
        {

            throw;
        }
    }

    private void Eliminar()
    {
        try
        {
            Llamadas llamada = LlamadasController.Buscar(Llamada.LlamadaId);

            if (llamada != null)
            {
                LlamadasController.Eliminar(llamada.LlamadaId);
                Mensaje = "Eliminado correctamente";


            }
            else
            {
                Mensaje = "No se pudo encontrar, no existe";
            }
        }
        catch (Exception)
        {

            throw;
        }
    }



}
